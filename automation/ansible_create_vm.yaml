### FIX source.py error
### FOR MAPPING WHICH HOST SERVER, give different ports to edge server on different hosts
### add different mapping in dns server (change in dns server code)
### route to other host after dnat in the vmadm10 host
### ansible when: inventory_hostname == 'host2' to write tasks specific to hosts (for port number handling)

---
- name: Provision a new VM in a subnet
  hosts: my_hosts
  gather_facts: no
  vars_files:
    - variables/create_vm_variables.yml
  # vars:
  #   network_id: nc2v2s1
  #   vm_id: vm1c2v2s1
  #   template_dir: "/home/vmadm/project/automation/jinja_templates"
  #   script_files_dir: "/home/vmadm/project/subnet_files"
  #   memory: 1024
  #   vcpu: 1
  #   interface_name: enp1s0
  #   vpc_incoming_port: 4567
  #   veth_vpns_v_inf: 11.11.11.2
  #   subnet_ip: 20.1.1.1
  #   public_router_ip: 1.1.1.2
  #   public_router_incoming_port: 4567
  #   vm_ip: 20.1.1.2/24
  #   vm_ip_nmsk: 20.1.1.2
  #   vm_port: 8080
  #   pub_namespace: public
  #   vpc_id: c2v2 

  tasks:   
    - name: Create the directory
      ansible.builtin.file:
        path: "{{ script_files_dir }}/{{ vm_id }}"
        state: directory
      become: yes

    - name: Create directory for VM
      become: yes
      file:
        path: "/var/lib/libvirt/images/{{ vm_id }}"
        state: directory
        mode: '0755'

    - name: Create QCOW2 image for VM
      become: yes
      command: qemu-img create -f qcow2 -F qcow2 -o backing_file=/var/lib/libvirt/images/jammy-server-cloudimg-amd64.img "/var/lib/libvirt/images/{{ vm_id }}/{{ vm_id }}.qcow2"

    - name: Resize image
      become: yes
      command: qemu-img resize "/var/lib/libvirt/images/{{ vm_id }}/{{ vm_id }}.qcow2" 12G

    - name: Create meta data files
      ansible.builtin.template:
        src: "{{ template_dir }}/meta_data.j2"
        dest: "/var/lib/libvirt/images/{{ vm_id }}/meta-data"
      become: yes

    - name: Read python file and add 5 indents
      ansible.builtin.shell:
        cmd: |
          sed -i 's/^/     /' /home/vmadm/project/automation/source.py
      args:
        executable: /bin/bash
      become: yes
    
    - name: Read data file and add 5 indents
      ansible.builtin.shell:
        cmd: |
          sed -i 's/^/     /' /home/vmadm/project/automation/optional.txt
      args:
        executable: /bin/bash
      become: yes

    - name: Read input from cat command
      shell: cat /home/vmadm/project/automation/source.py
      register: python_file_content
      changed_when: false
      become: yes

    - name: Read text file input from cat command
      shell: cat /home/vmadm/project/automation/optional.txt
      register: data_file_content
      changed_when: false
      become: yes

    - name: Create Jinja2 file
      template:
        src: "{{ template_dir }}/user_data.j2"
        dest: "/var/lib/libvirt/images/{{ vm_id }}/user-data"
      vars:
        content: "{{ python_file_content.stdout }}"
        optional_content: "{{ data_file_content.stdout }}"
      become: yes

    - name: Run genisoimage command
      command: genisoimage -output "/var/lib/libvirt/images/{{ vm_id }}/{{ vm_id }}-cidata.iso" -volid cidata -joliet -rock meta-data user-data
      args:
        chdir: "/var/lib/libvirt/images/{{ vm_id }}"
      become: yes

    - name: Generate XML files for VM definitions
      template:
        src: "{{ template_dir }}/vm_definition.j2"
        dest: "{{ script_files_dir }}/{{ vm_id }}/{{ vm_id }}.xml"
      become: yes
        
    - name: Define a VM
      community.libvirt.virt:
        command: define
        xml: "{{ lookup('file', script_files_dir + '/' + vm_id + '/' + vm_id + '.xml') }}"
        autostart: true
      become: yes

    - name: Start vm
      community.libvirt.virt:
        name: "{{ vm_id }}"
        state: running
      become: yes
   
    - name: Add a DNAT rule for the created VMs
      become: yes
      command: "sudo ip netns exec {{ vpc_id }} iptables -t nat -A PREROUTING -p tcp -d {{ veth_vpns_v_inf }} --dport {{ vpc_incoming_port }} -j DNAT --to-destination {{ vm_ip_nmsk }}:{{ vm_port }}"

    - name: Add a DNAT rule for public to private router 
      become: yes
      command: "sudo ip netns exec {{ pub_namespace }} iptables -t nat -A PREROUTING -p tcp -d {{ public_router_ip }} --dport {{ public_router_incoming_port }} -j DNAT --to-destination {{ veth_vpns_v_inf }}:{{ vpc_incoming_port }}"